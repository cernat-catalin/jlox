# A grammar with the following operator precedence:
# 1. Equality       (==, !=)            Left-assoc
# 2. Comparison     (>, >=, <, <=)      Left-assoc
# 3. Term           (+, -)              Left-assoc
# 4. Factor         (*, /)              Left-assoc
# 5. Unary          (!, -)              Right-assoc


program         -> statement* EOF

statement       -> exprStmt
                 | printStmt
exprStmt        -> expression ";"
printStmt       -> "print" expression ";"

expression      -> equality
equality        -> comparison ( ("!=", "--") comparison)*
comparison      -> term ( (">", ">=", "<", "<=") term)*
term            -> factor ( ("+", "-") factor)*
factor          -> unary ( ("*", "/") unary)*
unary           -> ("!", "-") unary
                 | primary
primary         -> NUMBER | STRING | "true" | "false" | "nil"
                 | "(" expression ")"